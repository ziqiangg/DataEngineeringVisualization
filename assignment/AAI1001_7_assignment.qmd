---
title: "AAI1001 Team 7 Project Proposal"
author:
  - name: Guo Zi Qiang Robin
  - name: Chew Tze Han
  - name: Cheong Wai Hong Jared
  - name: Akram
  - name: Gregory Tan

format:
  html:
    embed-resources: true
    toc: true
    number-sections: true
    theme: journal
---

# Project Proposal
Please ensure that you have installed these packages in your R environment before running the code chunks below.

```{r, message=FALSE, warning=FALSE, echo=TRUE}
# Load necessary libraries
library(tidyverse) # for data manipulation and visualization
library(metR) # for contour labels
library(viridis) # for color scales
library(ggpp) # for position_dodgenudge 
library(ggrepel) # for text repelling
library(directlabels) # for categorical text labeling
library(ggforce) # for enclosing shapes
library(VIM) # for NA value prediction
library(janitor) # for cleaning 
```

# Introduction
Using data engineering and visualisation with various packages in R, we will create a poster that accurately and thoughtfully displays the socioeconomic factors that influence fertility/birth rates in Singapore. To do so we will be using fertility rate data sourced from [SingStat](https://tablebuilder.singstat.gov.sg/table/TS/M810091){target="blank"} as well as labour participation and marital status data from data.gov.sg, sources as as follows [Residents Outside the Labour Force](https://staging.data.gov.sg/datasets?query=household&page=1&searchColumns=Year&resultId=d_e2475676af29ec78749f1b22cf8b301c){target="blank"} and [Residents Labour Force](Resident Labour Force Aged 15 Years and Over by Marital Status, Age and Sex){target="blank"}.

## Analysis of Original Visualisations
The original visualisations from the Straits Times are shown below,

![Total fertility rate from 2019 to 2023](imgs/total_fertility_rate.png)

Visualisations adapted from *[Straits Times: Singapore’s total fertility rate hits record low in 2023, falls below 1 for first time](https://www.straitstimes.com/singapore/politics/singapore-s-total-fertility-rate-hits-record-low-in-2023-falls-below-1-for-first-time){target="_blank"}*

The original visualisations focused on two variables: Singapore's total fertility rate (quantitative) and years (quantitative) from 2019 to 2023. While these visualisations provide a clear overview of the declining fertility trend, they lack depth in exploring the underlying socioeconomic factors that contribute to this trend.

In a more recent article, *[Straits Times: Why the fertility rate doesn’t capture socio-economic or cultural trends](https://www.straitstimes.com/singapore/why-the-fertility-rate-doesn-t-capture-socio-economic-or-cultural-trends){target="_blank"}*, it critiques the visualizations represented, stating that the first article statistically misrepresented the data to show that single women are having less kids but not accounting for other socioeconomic factors that led to the decline in fertility rate.

Key Weaknesses:

1. The visualization implies causality (e.g., being single = lower fertility) without data to back it up.

2. It does not account for other socioeconomic variables such as trends in workforce participation.

3. Lacks clarity in age-group breakdowns and trends across time.

Strengths:

1. Clean and clear formatting.

2. Good headline-grabbing summary.

3. Uses official government data.

## Proposed Improvements

These are the improvements that our group has identified:

1. **Interactive switchability**: To show the difference in trends between women in and out of the workforce.

2. **Age band**: To compare fertility rates across different age groups, allowing for a more nuanced understanding of how age impacts fertility.

3. **Marital status**: Shows marriage trends over the years and how they relate to fertility rates, providing insights into the relationship between marital status and fertility.

4. **Housing price trends**: To show how housing prices have changed over the years and draw insight into how it will affect fertility rate.

The final visualisation that we plan to create will have 5 variables:

1. **Year**: time series x-axis variable

2. **Count (in thousands)**: quantitative y-axis variable that accommodates the unit of measurement from our datasets. Count will represent Births Per Thousand Females and population of Females in the labour force (in thousands)

3. **marital status**: categorical variable that will be differentiated by colour and appear as geom_col. There will be 3 marital statuses (single, married, widowed/divorced) that will be represented as separate bars in the visualisation

4. **age band**: categorical variable that will be differentiated by colour and appear as geom_line. There will be 7 age bands (15-19, 20-24, 25-29, 30-34, 35-39, 40-44, 45-49) that will be represented as separate lines in the visualisation

5. **labour participation**: categorical variable that is switchable to show separate faceted graphs

We will also consider the additions of other variables such as yearly housing prices or other factors that may affect fertility rate.

Thus, a low fidelity mockup of the final visualisation is shown below:

![Low fidelity mockup of final visualisation](imgs/planned.png)


# Planned work distribution for each team member
| Team Member | Tasks |
| --- | --- |
| Guo Zi Qiang Robin | Data cleaning, data engineering, and visualisation |
| Chew Tze Han | Data cleaning, data engineering, and visualisation |
| Cheong Wai Hong Jared | Data cleaning, data engineering, and visualisation |
| Akram | Data cleaning, data engineering, and visualisation |
| Gregory Tan | Data cleaning, data engineering, and visualisation |


# Data Engineering
Using the 'tidyverse' package, we will perform data engineering to clean and prepare the data for visualisation. This includes:

- fertility rate data from SingStat is in wide format with years as the columns, we will pivot long for year-wise plots

- fertility rate data goes up till 2024, whereas the labour force data only goes up till 2022, we will filter the fertility rate data to only include years up till 2022

- standardise column names across datasets for consistency. For example, fertility dataset will follow "age" from labour force data

- rename age banding of fertility rate dataset to be consistent with labour force data. For example, "15-19" instead of "15 - 19 Years (Per Thousand Females)'

- filter fertility rate to remove redundant rows (only want fertility rate across age bands)

- for labour datasets, divide labour_force values by 1000 to align with count (in thousands) y-axis variable

- add on


## Data Loading

```{r}
#| echo: true
#| eval: true

fertility <- read_csv(
  "datasets/ResidentFertilityRate.csv",
  skip = 9,
  n_max = 17
)


work <- read_csv("datasets/ResidentLabourForceAged15YearsandOverbyMaritalStatusAgeandSex.csv")
not_working <- read_csv("datasets/ResidentsOutsidetheLabourForceAged15YearsandOverbyMaritalStatusAgeandSex.csv")
```

## Cleaning
add stuff

### fertility
```{r}
#| echo: true
#| eval: true

# Clean and reshape fertility data
fertility_clean <- fertility |>
  clean_names() |>
  rename(measure = data_series) |>
  # Convert all columns to character to handle mixed types
  mutate(across(-measure, as.character)) |>
  pivot_longer(
    cols = -measure,
    names_to = "year",
    values_to = "value"
  ) |>
  mutate(
    year = as.numeric(str_remove(year, "^x")),  # Remove leading "x"
    measure = str_trim(measure),
    value = ifelse(tolower(value) == "na", NA, value),  # Handle "na" strings
    value = as.numeric(value)
  ) |>
  # Extract age bands and filter for only age-specific rates
  mutate(
    age_band = case_when(
      str_detect(measure, "15 - 19") ~ "15-19",
      str_detect(measure, "20 - 24") ~ "20-24",
      str_detect(measure, "25 - 29") ~ "25-29",
      str_detect(measure, "30 - 34") ~ "30-34",
      str_detect(measure, "35 - 39") ~ "35-39",
      str_detect(measure, "40 - 44") ~ "40-44",
      str_detect(measure, "45 - 49") ~ "45-49",
      TRUE ~ NA_character_
    )
  ) |>
  filter(!is.na(age_band)) |>  # Keep only age band rows
  select(year, age_band, fertility_rate = value)  # Select desired columns
  
```


### not_working 

### work


#### Outliers


#### NA values
In the work and not_working datasets, there are NA values which represent that for some combinations of marital status and age groups there are no representation.

whoever doing this part justify if we need to do something about NA, i believe it is not necessary. These will just not appear as a bar chart in the final visualisation




