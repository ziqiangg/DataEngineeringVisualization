---
title: "AAI1001 Team 7 Project Proposal"
author:
  - name: Guo Zi Qiang Robin
  - name: Chew Tze Han
  - name: Cheong Wai Hong Jared
  - name: Akram
  - name: Gregory Tan

format:
  html:
    embed-resources: true
    toc: true
    number-sections: true
    theme: journal
---

# Project Proposal
Please ensure that you have installed these packages in your R environment before running the code chunks below.

```{r, message=FALSE, warning=FALSE, echo=TRUE}
# Load necessary libraries
library(tidyverse) # for data manipulation and visualization
library(metR) # for contour labels
library(viridis) # for color scales
library(ggpp) # for position_dodgenudge 
library(ggrepel) # for text repelling
library(directlabels) # for categorical text labeling
library(ggforce) # for enclosing shapes
library(VIM) # for NA value prediction
library(janitor) # for cleaning 
library(plotly) # for interactive plots
```

# Introduction
Using various packages in R, we will create a poster that thoughtfully displays the socioeconomic factors that influence fertility/birth rates in Singapore. To do so we will be using fertility rate data sourced from [SingStat](#references) as well as labour participation and marital status data from [data.gov.sg](#references). To note that data for 1995, 2000 and 2005 are not available as the Comprehensive Labour Force Survey was not conducted in these years due to the conduct of the Population Census 2000, General Household Surveys 1995 and 2005 by the Singapore Department of Statistics.

## Analysis of Original Visualisations
The original visualisations from the Straits Times are shown below,

![Total fertility rate from 2019 to 2023](imgs/total_fertility_rate.png)

Visualisations adapted from *[Straits Times: Singapore’s total fertility rate hits record low in 2023, falls below 1 for first time](#references)*

The original visualisations focused on two variables: Singapore's total fertility rate (quantitative) and years (quantitative) from 2019 to 2023. While these visualisations provide a clear overview of the declining fertility trend, they lack depth in exploring the underlying socioeconomic factors that contribute to this trend.

In a more recent article, *[Straits Times: Why the fertility rate doesn’t capture socio-economic or cultural trends](#references)*, it critiques the visualizations represented, stating that the first article statistically misrepresented the data to show that single women are having less kids but not accounting for other socioeconomic factors that led to the decline in fertility rate.

Key Weaknesses:

1. The visualization implies causality (e.g., being single = lower fertility) without data to back it up.

2. It does not account for other socioeconomic variables such as trends in workforce participation.

3. Lacks clarity in age-group breakdowns and trends across time.

Strengths:

1. Clean and clear formatting.

2. Good headline-grabbing summary.

3. Uses official government data.

## Proposed Improvements

These are the improvements that our group has identified:

1. **Interactivity**: To show the difference in fertility trends between women in and out of the workforce, by age band and marital status. This will allow users to explore the data in a more engaging way and draw their own conclusions.

2. **Age band**: To compare fertility rates across different age groups, allowing for a more nuanced understanding of how age impacts fertility.

3. **Marital status**: Shows marriage trends over the years and how they relate to fertility rates, providing insights into the relationship between marital status and fertility.

4. **Housing price trends**: To show how housing prices have changed over the years and draw insight into how it will affect fertility rate.

The final visualisation that we plan to create will have 5 variables:

1. **Year**: time series x-axis variable

2. **Count (in thousands)**: quantitative y-axis variable that accommodates the unit of measurement from our datasets. Count will represent Births Per Thousand Females and population of Females in the labour force (in thousands)

3. **marital status**: categorical variable that will be differentiated by colour and appear as geom_col. There will be 3 marital statuses (single, married, widowed/divorced) that will be represented as separate bars in the visualisation

4. **age band**: categorical variable that will be differentiated by colour and appear as geom_line. There will be 7 age bands (15-19, 20-24, 25-29, 30-34, 35-39, 40-44, 45-49) and total fertility rate that will be represented as separate lines in the visualisation

5. **labour participation**: categorical variable that is switchable to show separate faceted graphs

We will also consider the additions of other variables such as yearly housing prices or other factors that may affect fertility rate.

Thus, a low fidelity mockup of the final visualisation is shown below:

![Low fidelity mockup of final visualisation](imgs/planned.png)


# Planned work distribution for each team member
| Team Member | Tasks |
| --- | --- |
| Guo Zi Qiang Robin | Data cleaning, data engineering, and visualisation |
| Chew Tze Han | Data cleaning, data engineering, and visualisation |
| Cheong Wai Hong Jared | Data cleaning, data engineering, and visualisation |
| Akram | Data cleaning, data engineering, and visualisation |
| Gregory Tan | Data cleaning, data engineering, and visualisation |


# Data Engineering
The datasets will be loaded as 3 tibbles: 

| Dataset       | Description                                                                 |
|---------------|-----------------------------------------------------------------------------|
| fertility     | Includes fertility rate data; contains metadata which needs to be skipped                                |
| work          | Includes data on males and females in the labour force and marital status  |
| not_working   | Includes data on males and females out of the labour force and marital status |

## Data Loading

```{r}
#| echo: true
#| eval: true

fertility <- read_csv(
  "datasets/ResidentFertilityRate.csv",
  skip = 9,
  n_max = 17,
  show_col_types = FALSE
)


work <- read_csv("datasets/ResidentLabourForceAged15YearsandOverbyMaritalStatusAgeandSex.csv", show_col_types = FALSE)
not_working <- read_csv("datasets/ResidentsOutsidetheLabourForceAged15YearsandOverbyMaritalStatusAgeandSex.csv", show_col_types = FALSE)
```

## Cleaning
The tibbles fertility, work, and not_working will be cleaned and engineered for our interactive visualisation of fertility rates.

### fertility
The following steps will be taken to clean and reshape fertility:

- fertility tibble contains "na" strings which are not actually NA values, these points will need to be converted to NA values

- fertility rate data from SingStat is in wide format with years as the columns, we will pivot long for year-wise plots

- fertility rate data goes up till 2024, whereas the labour force data only goes up till 2022, we will filter the fertility rate data to only include years up till 2022

- standardise age banding of fertility rate dataset to be consistent with labour force data. For example, "15-19" instead of "15 - 19 Years (Per Thousand Females)'

- filtered to include age specific fertility rates and the total fertility rate by year

- introduce Unit of Measurement (uom) column to indicate scaling for total fertility rates and age banded fertility rates

```{r}
#| echo: true
#| eval: true

# Clean and reshape fertility data
fertility_clean <- fertility |>
  clean_names() |>
  rename(measure = data_series) |>
  # Convert all columns to character to handle mixed types
  mutate(across(-measure, as.character)) |>
  pivot_longer(
    cols = -measure,
    names_to = "year",
    values_to = "value"
  ) |>
  mutate(
    year = as.numeric(str_remove(year, "^x")),  # Remove leading "x"
    measure = str_trim(measure),
    value = ifelse(tolower(value) == "na", NA, value),  # Handle "na" strings
    value = as.numeric(value)
  ) |>
  # Extract age bands and filter for only age-specific rates
  mutate(
    age_band = case_when(
      measure == "Total Fertility Rate (TFR) (Per Female)" ~ "All",
      str_detect(measure, "15 - 19") ~ "15-19",
      str_detect(measure, "20 - 24") ~ "20-24",
      str_detect(measure, "25 - 29") ~ "25-29",
      str_detect(measure, "30 - 34") ~ "30-34",
      str_detect(measure, "35 - 39") ~ "35-39",
      str_detect(measure, "40 - 44") ~ "40-44",
      str_detect(measure, "45 - 49") ~ "45-49",
      TRUE ~ NA_character_
    )
  ) |>
  filter(!is.na(age_band)) |>  # Keep only age band rows
  mutate(
    uom = case_when(
      age_band == "All" ~ "per female",
      TRUE              ~ "per thousand females")
  ) |>
  filter(year > 1990 & year <= 2020) |>
  select(year, age_band, fertility_rate = value, uom)
  
```


### not_working 
The following steps will be taken to clean and reshape not_working:

- standardise column names to the 7 (15-19, 20-24, 25-29, 30-34, 35-39, 40-44, 45-49) age bands to be consistent with fertility and remove extra bandings

- for labour datasets, divide labour_force values by 1000 to align with count (in thousands) y-axis variable

- some outside_labour_force values are "-" which are not valid numerics, convert these to NA

- rename age column to age_band to match fertility

- aggregate age bands to introduce All to represent population outside labour force by year and marital status only, this is so that we can introduce interactivity with total fertility rate and fertility rates across age bands


```{r}
#| echo: true
#| eval: true

# Clean and reshape not_working data
not_working_clean <- not_working |>
  clean_names() |>
  # Filter for the 7 age bands only
  filter(age %in% c("15-19", "20-24", "25-29", "30-34", "35-39", "40-44", "45-49")) |>
  # Replace "-" with NA and convert to numeric
  mutate(
    outside_labour_force = na_if(outside_labour_force, "-"),
    outside_labour_force = as.numeric(outside_labour_force),
    outside_labour_force = outside_labour_force / 1000,  # Convert to thousands
    age_band = age  # Rename for consistency with fertility_clean
  ) |>
  select(year, sex, marital_status, age_band, outside_labour_force)

# Create aggregated "All" row by year, sex, and marital_status
not_working_all <- not_working_clean |>
  group_by(year, sex, marital_status) |>
  summarise(
    age_band = "All",
    outside_labour_force = sum(outside_labour_force, na.rm = TRUE),
    .groups = "drop"
  )

# Combine original cleaned data with the aggregated "All" row
not_working_clean <- bind_rows(not_working_clean, not_working_all)
```

### work
work tibble is cleaned in a similar way to not_working.

```{r}
#| echo: true
#| eval: true

# Clean and reshape work data
work_clean <- work |>
  clean_names() |>
  # Filter to only the 7 standard age bands
  filter(age %in% c("15-19", "20-24", "25-29", "30-34", "35-39", "40-44", "45-49")) |>
  # Replace "-" with NA and convert labour_force to numeric
  mutate(
    labour_force = na_if(labour_force, "-"),
    labour_force = as.numeric(labour_force),
    labour_force = labour_force / 1000,  # Convert to thousands
    age_band = age  # Rename to match other datasets
  ) |>
  select(year, sex, marital_status, age_band, labour_force)

# Create aggregated "All" row by year, sex, and marital_status
work_all <- work_clean |>
  group_by(year, sex, marital_status) |>
  summarise(
    age_band = "All",
    labour_force = sum(labour_force, na.rm = TRUE),
    .groups = "drop"
  )

# Combine original cleaned data with the aggregated "All" row
work_clean <- bind_rows(work_clean, work_all)
```

## Outliers
Using the IQR method to identify outliers in the datasets, we will plot a time series line graph to visualise the points where the outliers occur.

```{r}
#| echo: true
#| eval: true

# IQR-based outlier detection function
detect_outliers_iqr <- function(df, value_col, group_cols) {
  df |>
    group_by(across(all_of(group_cols))) |>
    mutate(
      Q1 = quantile(.data[[value_col]], 0.25, na.rm = TRUE),
      Q3 = quantile(.data[[value_col]], 0.75, na.rm = TRUE),
      IQR = Q3 - Q1,
      lower_bound = Q1 - 1.5 * IQR,
      upper_bound = Q3 + 1.5 * IQR,
      is_outlier = .data[[value_col]] < lower_bound | .data[[value_col]] > upper_bound
    ) |>
    ungroup()
}


# Apply to each dataset and exclude All (which is all ages)
fertility_outliers_flagged <- fertility_clean |>
  filter(age_band != "All") |>
  detect_outliers_iqr("fertility_rate", "age_band")

work_outliers_flagged <- work_clean |>
  filter(age_band != "All") |>
  detect_outliers_iqr("labour_force", c("age_band", "marital_status", "sex"))

not_working_outliers_flagged <- not_working_clean |>
  filter(age_band != "All") |>
  detect_outliers_iqr("outside_labour_force", c("age_band", "marital_status", "sex"))
```

```{r}
#| echo: true
#| eval: true

# Fertility rate outliers (excluding Total Fertility Rate)
ggplot(
  filter(fertility_outliers_flagged, age_band != "All"),
  aes(x = year, y = fertility_rate, color = age_band, group = age_band)
) +
  geom_line(linewidth = 0.8) +
  geom_point(
    data = filter(fertility_outliers_flagged, is_outlier & age_band != "All"),
    color = "red", size = 2, shape = 21, fill = "white"
  ) +
  facet_wrap(~age_band, scales = "free_y") +
  labs(
    title = "Fertility Rates by Age Band with Outliers (Excluding Total Fertility Rate)",
    y = "Fertility Rate", x = "Year", color = "Age Band"
  ) +
  theme_minimal()


# Labour force (working)
ggplot(work_outliers_flagged, aes(x = year, y = labour_force, color = age_band, group = interaction(age_band, marital_status))) +
  geom_line(linewidth = 0.8) +
  geom_point(
    data = filter(work_outliers_flagged, is_outlier),
    shape = 21, fill = "white", color = "red", size = 2,
    position = position_jitter(width = 0.5, height = 0.2)
  ) +
  facet_grid(sex ~ marital_status, scales = "free_y") +
  labs(
    title = "Labour Force by Age Band, Marital Status and Sex",
    y = "Labour Force (in thousands)", x = "Year", color = "Age Band"
  ) +
  theme_minimal(base_size = 12) +
  theme(
    strip.text = element_text(size = 11),
    axis.text.x = element_text(angle = 45, hjust = 1)
  )


# Outside labour force (not working)
ggplot(not_working_outliers_flagged, aes(x = year, y = outside_labour_force, color = age_band, group = interaction(age_band, marital_status))) +
  geom_line(linewidth = 0.8) +
  geom_point(
    data = filter(not_working_outliers_flagged, is_outlier),
    shape = 21, fill = "white", color = "red", size = 2,
    position = position_jitter(width = 0.5, height = 0.2)
  ) +
  facet_grid(sex ~ marital_status, scales = "free_y") +
  labs(
    title = "Outside Labour Force by Age Band, Marital Status and Sex",
    y = "Outside Labour Force (in thousands)", x = "Year", color = "Age Band"
  ) +
  theme_minimal(base_size = 12) +
  theme(
    strip.text = element_text(size = 11),
    axis.text.x = element_text(angle = 45, hjust = 1)
  )

```
The graphs generally show consistency with reported [fertility rates](#references) and [labour force](#referencs) participation trends in Singapore. 

# Joining datasets
We will join the datasets together to create a single tibble that contains all the necessary information for our visualisation. The joined tibble will contain the following columns:

- `year`: from 1990 to 2022

- `age_band`: Age bands and "All" which is for total fertility rate

- `marital_status`: Marital status of the data point

- `fertility_rate`: Fertility rate by age band (per thousand females) and total fertility rate (per female)

- `uom`: Fertility rate unit of measurement

- `labour_status`: Labour status of the data point, either "labour_force" or "outside_labour_force"

- `count`: Number of females either in workforce or outside workforce (in thousands)

```{r}
#| echo: true
#| eval: true

# Filter labour data to only include females
work_clean_female <- work_clean |> 
  filter(sex == "female") |> 
  select(-sex)

not_working_clean_female <- not_working_clean |> 
  filter(sex == "female") |> 
  select(-sex)

# Combine female labour and not working into one tibble
labour_status_female <- full_join(
  work_clean_female, 
  not_working_clean_female, 
  by = c("year", "marital_status", "age_band")
)

# Join to fertility
fertility_labour_joined_female <- fertility_clean |>
  left_join(labour_status_female, by = c("year", "age_band"))

# Pivot longer and ensure no sex columns remain
final <- fertility_labour_joined_female |>
  pivot_longer(
    cols = c("labour_force", "outside_labour_force"),
    names_to = "labour_status",
    values_to = "count"
  ) |>
  filter(!year %in% c(1995, 2000, 2005)) # to deal with missing years in labour force data
```

The "final" tibble is ready to be visualised.

# References {#references}
Data.gov.sg. (n.d.-a). data.gov.sg. [https://staging.data.gov.sg/datasets?query=household&page=1&searchColumns=Year&resultId=d_e19478b30d8f5cd6a1dc482bf2e46eb7](https://staging.data.gov.sg/datasets?query=household&page=1&searchColumns=Year&resultId=d_e19478b30d8f5cd6a1dc482bf2e46eb7){target="_blank"}

Data.gov.sg. (n.d.-b). data.gov.sg. [https://staging.data.gov.sg/datasets?query=household&page=1&searchColumns=Year&resultId=d_e2475676af29ec78749f1b22cf8b301c](https://staging.data.gov.sg/datasets?query=household&page=1&searchColumns=Year&resultId=d_e2475676af29ec78749f1b22cf8b301c){target="_blank"}

MacroTrends. (n.d.-a). Singapore unemployment rate. MacroTrends. Retrieved July 5, 2025, from [https://www.macrotrends.net/global-metrics/countries/sgp/singapore/unemployment-rate](https://www.macrotrends.net/global-metrics/countries/sgp/singapore/unemployment-rate){target="_blank"}

MacroTrends. (n.d.-b). Singapore population. MacroTrends. Retrieved July 5, 2025, from [https://www.macrotrends.net/global-metrics/countries/sgp/singapore/population](https://www.macrotrends.net/global-metrics/countries/sgp/singapore/population){target="_blank"}

Singapore Department of Statistics. (n.d.). Population by age group, sex and type of locality, 2023 [Table M810091]. Singapore Department of Statistics. Retrieved July 5, 2025, from [https://tablebuilder.singstat.gov.sg/table/TS/M810091](https://tablebuilder.singstat.gov.sg/table/TS/M810091){target="_blank"}

Tan, T. (2024a, March 11). Singapore’s total fertility rate hits record low in 2023, falls below 1 for first time. The Straits Times. [https://www.straitstimes.com/singapore/politics/singapore-s-total-fertility-rate-hits-record-low-in-2023-falls-below-1-for-first-time](https://www.straitstimes.com/singapore/politics/singapore-s-total-fertility-rate-hits-record-low-in-2023-falls-below-1-for-first-time){target="_blank"}

Tan, T. (2024b, June 30). Why the fertility rate doesn’t capture socio-economic or cultural trends. The Straits Times. [https://www.straitstimes.com/singapore/why-the-fertility-rate-doesn-t-capture-socio-economic-or-cultural-trends](https://www.straitstimes.com/singapore/why-the-fertility-rate-doesn-t-capture-socio-economic-or-cultural-trends){target="_blank"}






